{"remainingRequest":"C:\\Users\\Meet\\Desktop\\Go训练Code\\springboot-movie-master\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Meet\\Desktop\\Go训练Code\\springboot-movie-master\\vue-admin\\src\\views\\user\\List.vue?vue&type=style&index=1&id=b1f49250&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Meet\\Desktop\\Go训练Code\\springboot-movie-master\\vue-admin\\src\\views\\user\\List.vue","mtime":1703062594832},{"path":"C:\\Users\\Meet\\Desktop\\Go训练Code\\springboot-movie-master\\vue-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1700012852737},{"path":"C:\\Users\\Meet\\Desktop\\Go训练Code\\springboot-movie-master\\vue-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1700012854877},{"path":"C:\\Users\\Meet\\Desktop\\Go训练Code\\springboot-movie-master\\vue-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1700012853379},{"path":"C:\\Users\\Meet\\Desktop\\Go训练Code\\springboot-movie-master\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700012852320},{"path":"C:\\Users\\Meet\\Desktop\\Go训练Code\\springboot-movie-master\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1700012854080}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZGVtby10YWJsZS1leHBhbmQgewogIGZvbnQtc2l6ZTogMDsKfQoKLmRlbW8tdGFibGUtZXhwYW5kIGxhYmVsIHsKICB3aWR0aDogOTBweDsKICBjb2xvcjogIzk5YTliZjsKfQoKLmRlbW8tdGFibGUtZXhwYW5kIC5lbC1mb3JtLWl0ZW0gewogIG1hcmdpbi1yaWdodDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwogIHdpZHRoOiA1MCU7Cn0K"},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"user-list\">\n    <el-table :data=\"filteredUserList\" style=\"width: 100%\">\n      <el-table-column label=\"用户 ID\" width=\"430\" prop=\"id\"></el-table-column>\n      <el-table-column label=\"用户名\" width=\"200\" prop=\"username\"></el-table-column>\n      <el-table-column label=\"昵称\" width=\"200\" prop=\"nickname\"></el-table-column>\n      <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\n      <el-table-column label=\"性别\" prop=\"gender\"></el-table-column>\n      <el-table-column label=\"生日\" prop=\"birthday\"></el-table-column>\n      <el-table-column label=\"个人简介\" prop=\"info\"></el-table-column>\n      <el-table-column label=\"更新时间\" prop=\"updateAt\"></el-table-column>\n      <el-table-column width=\"180\" align=\"right\">\n        <template slot=\"header\" slot-scope=\"scope\">\n          <el-input v-model=\"search\" size=\"mini\" placeholder=\"输入关键字搜索\"/>\n        </template>\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" icon=\"el-icon-edit\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\">修改</el-button>\n          <el-popconfirm confirm-button-text='确定' cancel-button-text='不用了' icon=\"el-icon-info\" icon-color=\"red\" @confirm=\"handleDelete(scope.$index,scope.row)\" title=\"确定要删除此用户吗？\">\n            <el-button style=\"margin-left: 8px\" size=\"mini\" icon=\"el-icon-delete\" type=\"danger\" slot=\"reference\">删除</el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog\n        title=\"编辑用户信息\"\n        :visible.sync=\"dialogEditUser\"\n        width=\"50%\">\n      <el-form ref=\"form\" :model=\"formUser\" label-width=\"80px\">\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"formUser.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"昵称\">\n          <el-input v-model=\"formUser.nickname\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\">\n          <el-input v-model=\"formUser.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\">\n          <el-select v-model=\"formUser.gender\" placeholder=\"请选择性别\">\n            <el-option label=\"男\" value=\"男\"></el-option>\n            <el-option label=\"女\" value=\"女\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"生日\">\n          <el-date-picker type=\"date\" value-format=\"yyyy年-MM月-dd日\" placeholder=\"选择日期\" v-model=\"formUser.birthday\" style=\"width: 100%;\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"个人简介\">\n          <el-input type=\"textarea\" v-model=\"formUser.info\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"dialogEditUser = false\">取消</el-button>\n      <el-button type=\"primary\" @click=\"submitUpdateUser()\">确定</el-button>\n    </span>\n    </el-dialog>\n\n    <el-pagination\n        @current-change=\"handlePageChange\"\n        :current-page=\"currentPage\"\n        :page-sizes=\"[4, 8, 12]\"\n        :page-size=\"pageSize\"\n        layout=\"sizes, prev, pager, next, jumper\"\n        :total=\"userList.length\">\n    </el-pagination>\n  </div>\n\n\n</template>\n\n<script>\nimport { FindAllUser, UpdateUser, DeleteUser } from \"@/api/user\";\n\nexport default {\n  data() {\n    return {\n      currentPage: 1, // 当前页码\n      pageSize: 4, // 每页显示数量\n      userList: [], // 用户列表\n      search: '', // 搜索关键字\n      dialogEditUser: false, // 对话框的显示状态\n      formUser: {}, // 表单的数据模型\n    }\n  },\n\n  computed: {\n    filteredUserList() {\n      const startIndex = (this.currentPage - 1) * this.pageSize; // 计算起始索引\n      const endIndex = startIndex + this.pageSize; // 计算结束索引\n      return this.userList\n          .filter(user => !this.search || user.username.includes(this.search) || user.nickname.includes(this.search))\n          .slice(startIndex, endIndex); // 过滤并截取当前页的数据\n    },\n  },\n\n  mounted() {\n    this.fetchUserList();\n  },\n\n  methods: {\n\n    async handleEdit(index, row) {\n      this.dialogEditUser = true;\n      this.formUser = { ...row }; // 使用展开运算符复制用户对象\n    },\n\n    async submitUpdateUser() {\n      try {\n        await UpdateUser(this.formUser); // 调用API函数更新用户信息\n        this.dialogEditUser = false; // 关闭对话框\n        this.fetchUserList(); // 更新用户列表\n        this.$message.success(\"用户信息更新成功\");\n      } catch (error) {\n        console.error(\"Error updating user\", error);\n        this.$message.error(\"用户信息更新失败\");\n      }\n    },\n    async fetchUserList() {\n      try {\n        const response = await FindAllUser();\n        this.userList = response.data;\n      } catch (error) {\n        console.error(\"Error fetching user list\", error);\n      }\n    },\n\n\n\n    async handleDelete(index, row) {\n      try {\n        await DeleteUserByUsername(row.username);\n        this.userList.splice(index, 1);\n        this.$message.success(\"用户删除成功\");\n      } catch (error) {\n        console.error(\"Error deleting user\", error);\n        this.$message.error(\"用户删除失败\");\n      }\n    },\n\n\n    handlePageChange(page) {\n      this.currentPage = page; // 更新当前页码\n    },\n  },\n}\n</script>\n\n<style scoped>\n.user-list {\n  padding: 20px;\n}\n</style>\n\n\n<style scoped>\n.demo-table-expand {\n  font-size: 0;\n}\n\n.demo-table-expand label {\n  width: 90px;\n  color: #99a9bf;\n}\n\n.demo-table-expand .el-form-item {\n  margin-right: 0;\n  margin-bottom: 0;\n  width: 50%;\n}\n</style>"]}]}